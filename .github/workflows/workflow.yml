name: deploy-toy-website-environments
concurrency: toy-company

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environmentType:
        required: true
        type: string
        default: 'Test'
      resourceGroupName:
        required: true
        type: string
        default: 'ToyWebSiteTest'

permissions:
  id-token: write
  contents: read

env:
  TEMPLATE: ./deploy/main.bicep
  TESTSCRIPT: ../deploy/Website.Tests.ps1
  RESOURCEGROUP: ToyWebsiteTest
  PROD_RESOURCEGROUP: ToyWebsiteProduction
  TEST_CRED: ${{ secrets.AZURE_TEST_CRED }}
  PROD_CRED: ${{ secrets.AZURE_PROD_CRED }}
  TESTTYPE: Test
  PRODTYPE: Production

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint code
        run: |
          az bicep build --file deploy/main.bicep

  validate:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        name: Sign in to Azure
        with:
          creds: ${{ env.TEST_CRED }}
      - uses: actions/checkout@v3
      - uses: azure/arm-deploy@v1
        name: Run validation
        with:
          deploymentName: ${{ github.run_number }}
          resourceGroupName: ${{ env.RESOURCEGROUP }}
          template: ${{ env.TEMPLATE }}
          deploymentMode: 'Validate'
          parameters: environmentType=${{ env.TESTTYPE }}

  whatif-production:  
    runs-on: ubuntu-latest  
    needs: validate  
    steps:  
      - uses: azure/login@v1  
        name: Login to Azure
        with:  
          creds: ${{ env.PROD_CRED }}  
      - uses: actions/checkout@v3
      - uses: azure/arm-deploy@v1  
        name: Run what-if  
        with:  
            deploymentName: ${{ github.run_number }}  
            resourceGroupName: ${{ env.PROD_RESOURCEGROUP }}  
            template: ${{env.TEMPLATE}}
            parameters: environmentType=${{ env.PRODTYPE }}
            failOnStdErr: false  
            additionalArguments: --what-if  
  deploy-test:
    needs: whatif-production
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.TEST_CRED }}
      - uses: actions/checkout@v3
      - name: Deploy to test environment
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.RESOURCEGROUP }}
          template: ${{env.TEMPLATE}}
          deploymentMode: 'Validate'
          parameters: environmentType=${{ env.TESTTYPE }}

  deploy-production:
    needs: deploy-test
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.PROD_CRED }}
      - uses: actions/checkout@v3
      - name: Deploy to production environment
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.PROD_RESOURCEGROUP }}
          template: ${{ env.TEMPLATE }}
          deploymentMode: 'Validate'
          parameters: environmentType=${{ env.PRODTYPE }}

  smoke-test:
    runs-on: ubuntu-latest
    needs: [deploy-production]
    steps:
      - uses: actions/checkout@v3
      - run: |
          $container = New-PesterContainer `
            -Path ${{ env.TESTSCRIPT }} `
            -Data @{ HostName = '${{needs.deploy-production.outputs.appServiceAppHostName}}' }
          Invoke-Pester `
            -Container $container `
            -CI
        name: Run smoke tests
        shell: pwsh

  rollback:
    runs-on: ubuntu-latest
    needs: smoke-test
    if: ${{ always() && needs.smoke-test.result == 'failure' }}
    steps:
      - run: |
          echo "Performing rollback steps..."         