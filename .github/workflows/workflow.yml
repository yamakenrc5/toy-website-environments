name: deploy-toy-website-environments  
concurrency: toy-company  
  
on:  
  push:  
    branches:  
      - main  
  workflow_dispatch:  
    inputs:  
      environmentType:  
        required: true  
        type: string  
        default: Test  
      resourceGroupName:  
        required: true  
        type: string  
        default: ToyWebSiteTest  
      creds:  
        required: true  
      reviewApiUrl:  
        required: true  
        type: string  
    secrets:  
      cred:  
        required: true  
      reviewApiKey:  
        required: true  
      reviewApiUrl:  
        required: true  

permissions:
  id-token: write
  contents: read

env:
  TEMPLATE: ./deploy/main.bicep
  TESTSCRIPT: ./deploy/Website.Tests.ps1
  RESOURCEGROUP: ToyWebsiteTest
  PROD_RESOURCEGROUP: ToyWebsiteProduction
  TEST_CRED: ${{ secrets.AZURE_TEST_CRED }}
  PROD_CRED: ${{ secrets.AZURE_PROD_CRED }}
  TESTTYPE: Test
  PRODTYPE: Production

jobs:
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint code
        run: |
          az bicep build --file ${{ env.TEMPLATE }}

  validate:
    runs-on: ubuntu-latest
    needs: lint
    env:
      deploymentMode: Validate
      deploymentName: ${{ github.run_number }}
      reviewApiUrl: ${{ inputs.reviewApiUrl }}
      reviewApiKey: ${{ secrets.REVIEW_API_KEY_TEST }}
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        name: Sign in to Azure
        with:
          creds: ${{ secrets.AZURE_TEST_CRED }}
      - uses: azure/arm-deploy@v1
        name: Run preflight validation
        with:
          resourceGroupName: ${{ env.RESOURCEGROUP }}
          template: ${{ env.TEMPLATE }}
          environmentType: ${{ env.TESTTYPE }}

  whatif-production:  
    runs-on: ubuntu-latest  
    needs: validate  
    env:
      deploymentMode: Validate
      deploymentName: ${{ github.run_number }}
      reviewApiUrl: ${{ inputs.reviewApiUrl }}
      reviewApiKey: ${{ secrets.REVIEW_API_PRODUCTION }}
    steps:  
      - uses: azure/login@v1  
        name: Login to Azure
        with:  
          creds: ${{ secrets.AZURE_PROD_CRED }}  
      - uses: azure/arm-deploy@v1  
        name: Run what-if  
        with:  
            failOnStdErr: false  
            additionalArguments: --what-if  
            resourceGroupName: ${{ env.PROD_RESOURCEGROUP }}
            template: ${{ env.TEMPLATE }}
            environmentType: ${{ env.PRODTYPE }}

  deploy-test:
    needs: whatif-production
    runs-on: ubuntu-latest
    env:
      creds: ${{ secrets.AZURE_TEST_CRED }}
      deploymentMode: Validate
      reviewApiUrl: https://sandbox.contoso.com/reviews
      reviewApiKey: ${{ secrets.REVIEW_API_KEY_PRODUCTION }}
    steps:
      - name: Login to Azure
        uses: azure/login@v1
      - uses: actions/checkout@v3
      - name: Deploy to test environment
        uses: azure/arm-deploy@v1
        with:
          environmentType: ${{ env.TESTTYPE }}
          resourceGroupName: ${{ env.RESOURCEGROUP }}

  deploy-production:
    needs: deploy-test
    runs-on: ubuntu-latest
    env:
      creds: ${{ secrets.AZURE_PROD_CRED }}
      deploymentMode: Validate
      reviewApiUrl: https://api.contoso.com/reviews
      reviewApiKey: ${{ secrets.REVIEW_API_KEY_PRODUCTION }}
    steps:
      - name: Login to Azure
        uses: azure/login@v1
      - uses: actions/checkout@v3
      - name: Deploy to production environment
        uses: azure/arm-deploy@v1
        with:
          resourceGroupName: ${{ env.PROD_RESOURCEGROUP }}
          template: ${{ env.TEMPLATE }}
      - name: Rollback action
        run: |
          echo "Performing rollback steps..."        ## just echo-ing.
        if: ${{ always() && needs.deploy-production.result == 'failure' }}
