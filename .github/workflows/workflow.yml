name: deploy-toy-website-environments
concurrency: toy-company

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environmentType:
        required: true
        type: string
        default: 'Test' # Add a default value here
      resourceGroupName:
        required: true
        type: string
        default: 'ToyWebSiteTest' # Add a default value here

permissions:
  id-token: write
  contents: read

env:
  TEMPLATE: deploy/main.bicep
  RESOURCEGROUP: ToyWebsiteTest
  PROD_RESOURCEGROUP: ToyWebsiteProduction
  TEST_CRED: ${{ secrets.AZURE_TEST_CRED }}
  PROD_CRED: ${{ secrets.AZURE_PROD_CRED }}
  TESTTYPE: 'Test'
  PRODTYPE: 'Production'

jobs:
  # Lint the Bicep file.
  lint:
    name: Lint code
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Lint code
        run: |
          az bicep build --file deploy/main.bicep

  # Validate the Bicep file.
  validate:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: azure/login@v1
        name: Sign in to Azure
        with:
          creds: ${{ env.TEST_CRED }}
          environmentType: ${{env.TESTTYPE}}
      - name: Run validation
        uses: azure/arm-deploy@v1
        with:
          deploymentName: ${{ github.run_number }}
          resourceGroupName: ${{ env.RESOURCEGROUP }}
          template: ${{env.TEMPLATE}}
          deploymentMode: 'Validate'
          parameters: environmentType=${{ env.TESTTYPE}}

  # WhatIf deployment for production environment.
  whatif-production:
    runs-on: ubuntu-latest
    needs: validate
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.PROD_CRED }}
      - name: Run WhatIf deployment for production
        uses: azure/arm-deploy@v1
        with:
          resource-group: ${{ env.PROD_RESOURCEGROUP }}
          template: ${{ env.TEMPLATE }}
          deployment-mode: 'WhatIf'
          app-name: ${{ env.PROD_RESOURCEGROUP }}
          environmentType: ${{ env.PRODTYPE }}

  # Deploy to the test environment.
  deploy-test:
    needs: whatif-production
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.TEST_CRED }}
      - name: Deploy to test environment
        uses: azure/arm-deploy@v1
        with:
          resource-group: ${{ env.RESOURCEGROUP }}
          template: ${{ env.TEMPLATE }}
          deployment-mode: 'incremental'
          app-name: ${{ env.RESOURCEGROUP }}
          environmentType: ${{ env.TESTTYPE }}

  # Deploy to the production environment.
  deploy-production:
    needs: deploy-test
    runs-on: ubuntu-latest
    steps:
      - name: Login to Azure
        uses: azure/login@v1
        with:
          creds: ${{ env.PROD_CRED }}
      - name: Deploy to production environment
        uses: azure/arm-deploy@v1
        with:
          resource-group: ${{ env.PROD_RESOURCEGROUP }}
          template: ${{ env.TEMPLATE }}
          environmentType: ${{ env.PRODTYPE }}
          deployment-mode: 'incremental'
          app-name: ${{ env.PROD_RESOURCEGROUP }}

  # Run smoke tests.
  smoke-test:
    runs-on: ubuntu-latest
    needs: [deploy-test, deploy-production]
    steps:
      - uses: actions/checkout@v3
      - run: |
          $container = New-PesterContainer `
            -Path 'deploy/Website.Tests.ps1' `
            -Data @{ HostName = '${{ needs.deploy.outputs.appServiceAppHostName }}' }
          Invoke-Pester `
            -Container $container `
            -CI
        name: Run smoke tests

  # Rollback steps (added as the last step).
  rollback:
    runs-on: ubuntu-latest
    needs: smoke-test
    if: ${{ always() && needs.smoke-test.result == 'failure' }}
    steps:
      - run: |
          echo "Performing rollback steps..."
